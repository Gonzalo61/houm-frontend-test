{"version":3,"sources":["assets/types sync /^/.*/.png$","assets/types/bug.png","assets/types/dark.png","assets/types/dragon.png","assets/types/electric.png","assets/types/fairy.png","assets/types/fighting.png","assets/types/fire.png","assets/types/flying.png","assets/types/ghost.png","assets/types/grass.png","assets/types/ground.png","assets/types/ice.png","assets/types/normal.png","assets/types/poison.png","assets/types/psychic.png","assets/types/rock.png","assets/types/steel.png","assets/types/water.png","components/ui/Footer.js","components/pokemonCard/PokemonCard.js","components/ui/SinCard.js","assets/pokeball.png","components/ui/Pagination.js","components/ui/Loader.js","config/config.js","components/allPokemons/AllPokemon.js","components/generaciones/PokemonGeneraciones.js","components/ui/NoSearchPokemon.js","components/searchPokemon/SearchPokemonScreen.js","components/ui/Navbar.js","routers/AppRouter.js","PokemonApp.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Footer","className","PokemonCard","pokemon","nameCapitalize","name","charAt","toUpperCase","slice","imgPokemon","sprites","other","front_default","src","alt","stats","filter","stat","base_stat","weight","height","types","type","icono","require","default","SinCard","limit","Pagination","onClickHandlePrev","onClickHandleNext","onClick","pokeball","Loader","TYPE_API","SEARCH_API","GENE_API","POKE_API","AllPokemon","useState","loader","setLoader","setLimit","prevPage","setPrevPage","nextPage","setNextPage","currenPage","setCurrentPage","typePokemon","setTypePokemon","pokemones","setPokemones","pokemonFilter","setPokemonFilter","typeGeneral","setTypeGeneral","useEffect","length","newPokemonList","push","fetch","then","res","ok","json","data","next","previous","promiesesArray","results","result","url","response","Promise","all","error","console","log","htmlFor","onChange","target","value","toString","defaultValue","limite","PokemonGeneraciones","generacion","setGeneracion","generacionList","setGeneracionList","typeFilter","setTypeFilter","undefined","pokemon_species","gene","main_region","NoSearchPokemon","pokemonName","SearchPokemonScreen","params","useParams","pokemonSearch","setPokemonSearch","catch","to","Navbar","inputValue","setInputValue","history","useHistory","data-toggle","data-target","aria-controls","aria-expanded","aria-label","activeClassName","exact","onSubmit","preventDefault","trim","placeholder","busqueda","toLowerCase","AppRouter","path","component","PokemonApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.148188e8.chunk.js","sourcesContent":["var map = {\n\t\"./bug.png\": 25,\n\t\"./dark.png\": 26,\n\t\"./dragon.png\": 27,\n\t\"./electric.png\": 28,\n\t\"./fairy.png\": 29,\n\t\"./fighting.png\": 30,\n\t\"./fire.png\": 31,\n\t\"./flying.png\": 32,\n\t\"./ghost.png\": 33,\n\t\"./grass.png\": 34,\n\t\"./ground.png\": 35,\n\t\"./ice.png\": 36,\n\t\"./normal.png\": 37,\n\t\"./poison.png\": 38,\n\t\"./psychic.png\": 39,\n\t\"./rock.png\": 40,\n\t\"./steel.png\": 41,\n\t\"./water.png\": 42\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 24;","export default __webpack_public_path__ + \"static/media/bug.e6834bb6.png\";","export default __webpack_public_path__ + \"static/media/dark.4eb7ce07.png\";","export default __webpack_public_path__ + \"static/media/dragon.2db03691.png\";","export default __webpack_public_path__ + \"static/media/electric.f88dc7ad.png\";","export default __webpack_public_path__ + \"static/media/fairy.21652948.png\";","export default __webpack_public_path__ + \"static/media/fighting.af2443b7.png\";","export default __webpack_public_path__ + \"static/media/fire.4ce27196.png\";","export default __webpack_public_path__ + \"static/media/flying.cb6bd47c.png\";","export default __webpack_public_path__ + \"static/media/ghost.d6546075.png\";","export default __webpack_public_path__ + \"static/media/grass.ac0a5a65.png\";","export default __webpack_public_path__ + \"static/media/ground.788861a5.png\";","export default __webpack_public_path__ + \"static/media/ice.bebc4ee5.png\";","export default __webpack_public_path__ + \"static/media/normal.59c8ad3e.png\";","export default __webpack_public_path__ + \"static/media/poison.565e672c.png\";","export default __webpack_public_path__ + \"static/media/psychic.8d2b857b.png\";","export default __webpack_public_path__ + \"static/media/rock.b8b13c3d.png\";","export default __webpack_public_path__ + \"static/media/steel.a4413931.png\";","export default __webpack_public_path__ + \"static/media/water.e9049e98.png\";","import React from 'react'\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <div className=\"container-footer\">\r\n            <h6>Gonzalo Corsánigo - 2021</h6>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport const PokemonCard = ({pokemon}) => {\r\n\r\n    const nameCapitalize = pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1)\r\n    \r\n    // CUAL IMAGEN ES MEJOR?\r\n    //   let imgPokemon1 = pokemonCard.sprites.other.dream_world.front_default;\r\n  \r\n    const imgPokemon = pokemon.sprites.other['official-artwork'].front_default;\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"pokemon\">\r\n                <div className=\"pokemon-img\"> \r\n                    <img className=\"art\" src={imgPokemon} alt=\"{name}\"/>\r\n                </div>\r\n                <div className=\"pokemon-info\">\r\n                    <div className=\"container-nro\">\r\n                        <div className=\"pokemon-nro\">\r\n                            <h2>#{pokemon.id}</h2>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"pokemon-name\">\r\n                        <h2>{nameCapitalize}</h2>\r\n                    </div>\r\n                    <hr></hr>\r\n                    <div className=\"hp-data\">\r\n                    { \r\n\r\n                        pokemon.stats.filter( stat => \r\n                            stat.stat.name === 'hp'\r\n                        ).map(stat => {\r\n                            return (\r\n                                \r\n                                <span key={'hp'+pokemon.name} className=\"hp\">HP: {stat.base_stat}</span>\r\n                                \r\n                            )\r\n                        })\r\n                    }\r\n                    </div>\r\n                    <div className=\"pokemon-data\">\r\n                        <div>\r\n                            <div className=\"info-center\">\r\n                                <span>{pokemon.weight}kg</span>\r\n                            </div>\r\n                            <div className=\"info-center\">\r\n                                <span className=\"datos-name\">Peso</span>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"info-center\">\r\n                                <span>{pokemon.height}m</span>\r\n                            </div>\r\n                            <div className=\"info-center\">\r\n                                <span className=\"datos-name\">Altura</span>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"info-center\">\r\n                                \r\n\r\n                                    {pokemon.types.map( (type) => {\r\n                                        let icono = type.type.name;\r\n                                        return (\r\n                                            <div key={type.type.name+'_'+icono} className=\"pokemon-type\">\r\n                                                <img className=\"icon-type\" src={require(`../../assets/types/${icono}.png`).default} alt=\"\"/>\r\n                                            </div>\r\n                                        )\r\n                                        \r\n                                    })}\r\n                            </div>\r\n                            <div className=\"info-center\">\r\n                                <span className=\"datos-name\">Tipo</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nexport const SinCard = ({limit}) => {\r\n    return (\r\n        <div className=\"card w-100\">\r\n            <div className=\"card-body\">\r\n                <h4 className=\"card-title\">¡¡Lo Sentimos!!</h4>\r\n                <p className=\"card-text\">En esta lista de {limit} cards, no existe un pokémon que corresponda al filtro de su búsqueda.\r\n                              Por favor aumente el limite de tarjetas a mostrar o siga cambiando de página. Muchas Gracias!\r\n                </p>  \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/pokeball.78720584.png\";","import React from 'react'\r\nimport pokeball from '../../assets/pokeball.png'\r\n\r\nexport const Pagination = ({onClickHandlePrev, onClickHandleNext}) => {\r\n    \r\n    return (\r\n        <div className=\"pagination\">\r\n            { onClickHandlePrev && <button onClick={onClickHandlePrev}>Anterior</button>}\r\n              <div className=\"button-pokeball\">\r\n                    <img src={pokeball} alt=\"pokeball\"></img>\r\n                </div>\r\n             { onClickHandleNext && <button onClick={onClickHandleNext}>Siguiente</button>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport pokeball from '../../assets/pokeball.png'\r\n\r\nexport const Loader = () => {\r\n    return (\r\n        <div className=\"loader\">\r\n            <img src={pokeball} alt=\"poke\"/>\r\n        </div>\r\n    )\r\n}\r\n","export const POKE_API = \"https://pokeapi.co/api/v2/pokemon/?offset=0&limit=10\";\r\nexport const TYPE_API = \"https://pokeapi.co/api/v2/type/\";\r\nexport const SEARCH_API = \"https://pokeapi.co/api/v2/pokemon/\";\r\nexport const GENE_API = \"https://pokeapi.co/api/v2/generation/\"","import React, {useEffect, useState} from 'react';\r\nimport { PokemonCard } from '../pokemonCard/PokemonCard';\r\nimport { SinCard } from '../ui/SinCard';\r\nimport { Pagination } from '../ui/Pagination';\r\nimport { Loader } from '../ui/Loader';\r\nimport { TYPE_API } from '../../config/config';\r\n\r\n\r\nconst POKE_API = \"https://pokeapi.co/api/v2/pokemon/?offset=0&\";\r\n\r\nexport const AllPokemon = () => {\r\n\r\n    const [loader, setLoader] = useState(true);\r\n    const [limit, setLimit] = useState(10)\r\n    const [prevPage, setPrevPage] = useState(\"\");\r\n    const [nextPage, setNextPage] = useState(\"\");\r\n    const [currenPage, setCurrentPage] = useState(`${POKE_API}limit=${limit}`)\r\n    const [typePokemon, setTypePokemon] = useState(\"\");\r\n    const [pokemones, setPokemones] = useState([]);\r\n    const [pokemonFilter, setPokemonFilter] = useState();\r\n    const [typeGeneral, setTypeGeneral] = useState([]);\r\n\r\n    const handleChange = (e) => {\r\n      setLoader('true')\r\n      let limite = e.target.value;\r\n      setLimit(limite);\r\n      setCurrentPage(`${POKE_API}limit=${limite}`)\r\n    }\r\n\r\n    const onClickHandleNext = () => {\r\n      let url = nextPage;\r\n      if(url != null) {\r\n        setLoader('true')\r\n        setCurrentPage(url);\r\n      }\r\n\r\n    }\r\n\r\n    const onClickHandlePrev = () => {\r\n      let url = prevPage;\r\n      if(url != null) {\r\n        setLoader('true')\r\n        setCurrentPage(url);\r\n      }\r\n    }\r\n\r\n    const changeHandleType = (e) => {\r\n\r\n      const type = (e.target.value).toString();\r\n      \r\n      setTypePokemon(type);\r\n    }\r\n\r\n// FILTRA POKÉMON\r\n    useEffect(() => {\r\n      if(typePokemon.length > 0) {          \r\n          let newPokemonList = [];\r\n          pokemones.filter( pokemon => \r\n            pokemon.types.map( ({type}) => \r\n               (type.name === typePokemon? newPokemonList.push(pokemon):'')\r\n            )\r\n          )\r\n          \r\n        setPokemonFilter(newPokemonList) \r\n\r\n      } else {\r\n        setPokemonFilter(pokemones); \r\n      }\r\n      return () => {\r\n      }\r\n\r\n    }, [typePokemon, pokemones])\r\n\r\n// OBTIENE TODOS LOS POKÉMON\r\n    useEffect( () => {   \r\n      setLoader(true)\r\n      try {\r\n        fetch(currenPage)\r\n                .then(res => {\r\n                  if(res.ok) {\r\n                    return res.json();\r\n                  } else {\r\n                    throw new Error ('Problemas al mostrar pokémon')\r\n                  }\r\n                })\r\n                .then(data => {\r\n                  setNextPage(data.next);\r\n                  setPrevPage(data.previous);\r\n                  let results = data.results;\r\n                  let promiesesArray = results.map(result => {\r\n                    return fetch(result.url)\r\n                              .then(response => response.json());\r\n                  })\r\n                  return Promise.all(promiesesArray)\r\n                }).then((data) => {\r\n                  setPokemonFilter(data);\r\n                  setPokemones(data);\r\n                  setLoader(false);\r\n                })   \r\n        \r\n      } catch (error) {\r\n        console.log(error);\r\n      }   \r\n      return () => {\r\n\r\n      }\r\n    }, [limit, currenPage]);\r\n\r\n\r\n// OBTIENE TODOS LOS TIPOS DE POKÉMON\r\n    useEffect( () => {\r\n      try {\r\n        fetch(TYPE_API)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                  let results = data.results;\r\n                  setTypeGeneral(results);\r\n                })\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      return () => {\r\n\r\n      }\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n          <div className=\"container\">\r\n            <div className=\"card w-100\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Pókemon App</h5>\r\n                    <p className=\"card-text\">Aplicación realizada en React, consumiendo API de PokeApi.</p>\r\n                    <div>\r\n                      <form>\r\n                        <div className=\"form-row justify-content-between\">\r\n                            <div className=\"form-group col-md-2\">\r\n                              <label htmlFor=\"inputState\">Tipo</label>\r\n                              <select onChange={changeHandleType} id=\"inputState\" className=\"form-control\">\r\n                                <option value=\"\" defaultValue>Todos</option>\r\n                                {typeGeneral.map( (type) => {  \r\n                                        let nameCapitalize = type.name.charAt(0).toUpperCase() + type.name.slice(1)\r\n                                          return (            \r\n                                            <option value={type.name} key={type.name}>\r\n                                                {nameCapitalize}\r\n                                            </option>        \r\n                                          )\r\n                                      })}\r\n                              </select>\r\n                            </div>\r\n                              <div className=\"form-group col-md-1\">\r\n                                <div>\r\n                                  <label htmlFor=\"inputState\">Mostrar: </label>\r\n                                  <select id=\"inputState\" className=\"form-control\" onChange={handleChange} >\r\n                                    <option value=\"10\" defaultValue>10</option>\r\n                                    <option value=\"20\" >20</option>\r\n                                    <option value=\"30\" >30</option>\r\n                                    <option value=\"50\" >50</option>\r\n                                    <option value=\"100\" >100</option>\r\n                                    <option value=\"151\" >151</option>\r\n                                  </select> \r\n                                </div>\r\n                          </div>\r\n                        </div>\r\n                      </form>\r\n                    </div>   \r\n                  </div>\r\n            </div>\r\n          </div>\r\n            {\r\n\r\n          loader === true ? (\r\n              <Loader/>\r\n\r\n            ) : (\r\n              <>\r\n                <>\r\n                  {\r\n                    pokemonFilter.length !== 0  ? (\r\n                      <div className = \"pokemon-container\">\r\n                        {\r\n                          pokemonFilter.length > 0 && pokemonFilter.map(pokemon => (\r\n                            <PokemonCard key={pokemon.id} pokemon = {pokemon} />\r\n                          ))\r\n                        }\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"container\">\r\n                          <SinCard  limit={limit} ></SinCard>\r\n                      </div> \r\n                  )}\r\n                </>\r\n                  <Pagination onClickHandlePrev={ prevPage ? onClickHandlePrev: null} \r\n                              onClickHandleNext={ nextPage ? onClickHandleNext: null} />\r\n\r\n              </>\r\n            )}\r\n        </>\r\n      )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport { GENE_API, SEARCH_API, TYPE_API } from '../../config/config'\r\nimport { PokemonCard } from '../pokemonCard/PokemonCard';\r\nimport { Loader } from '../ui/Loader';\r\n\r\nexport const PokemonGeneraciones = () => {\r\n\r\n    const [generacion, setGeneracion] = useState('1');\r\n    const [generacionList, setGeneracionList] = useState([]);\r\n    const [pokemones, setPokemones] = useState([]);\r\n    const [pokemonFilter, setPokemonFilter] = useState([]);\r\n    const [loader, setLoader] = useState(true);\r\n    const [typeGeneral, setTypeGeneral] = useState([]);\r\n    const [typeFilter, setTypeFilter] = useState('');\r\n\r\n    const changeHandleGeneracion = (e) => {\r\n        const value = e.target.value;\r\n        setGeneracion(value)\r\n    }\r\n\r\n    const changeHandleType = (e) => {\r\n        const value = e.target.value;\r\n        setTypeFilter(value)\r\n    }\r\n\r\n    //////////////// GUARDO LA LISTA DE GENERACIONES /////////////////////////\r\n    useEffect(() => {\r\n        try {\r\n            fetch(GENE_API)\r\n                    .then(res => {\r\n                      if(res.ok) {\r\n                        return res.json();\r\n                      } else {\r\n                        throw new Error ('Problemas al mostrar pokémon')\r\n                      }\r\n                    })\r\n                    .then(data => {\r\n                      let results = data.results;\r\n                      let promiesesArray = results.map(result => {\r\n                        return fetch(result.url)\r\n                                  .then(response => response.json());\r\n                      })\r\n                      return Promise.all(promiesesArray)\r\n                    }).then((data) => {\r\n                        setGeneracionList(data)\r\n                    })   \r\n          } catch (error) {\r\n            console.log(error);\r\n          }   \r\n        \r\n    }, [])\r\n\r\n    \r\n    //// PERSISTO EL FILTRO DE BÚSQUEDA\r\n    useEffect(() => {\r\n\r\n        if (typeFilter !== '') {\r\n            let newPokemonList = [];\r\n            pokemones.filter( pokemon => {\r\n                if(pokemon === undefined){\r\n                    return ''\r\n                }\r\n                return pokemon.types.map( ({type}) => \r\n                    (type.name === typeFilter? newPokemonList.push(pokemon):'')\r\n                )\r\n            })\r\n\r\n            setPokemonFilter(newPokemonList)\r\n        } else {\r\n            setPokemonFilter(pokemones)\r\n        }\r\n        \r\n\r\n    }, [typeFilter, pokemones])\r\n\r\n    useEffect(() => {\r\n        \r\n    setLoader(true)\r\n      try {\r\n        fetch(GENE_API+generacion)\r\n                .then(res => {\r\n                  if(res.ok) {\r\n                    return res.json();\r\n                  } else {\r\n                    throw new Error ('Problemas al mostrar pokémon')\r\n                  }\r\n                })\r\n                .then(data => {\r\n                \r\n                  let results = data.pokemon_species;\r\n                  let promiesesArray = results.map(result => {\r\n                    return fetch(SEARCH_API+result.name)\r\n                                .then(res => {\r\n                                    if(res.ok) {\r\n                                    return res.json();\r\n                                    } \r\n                                })\r\n                  })\r\n                  return Promise.all(promiesesArray)\r\n                }).then((data) => {\r\n                    setPokemones(data);\r\n                    setPokemonFilter(data)\r\n                    setLoader(false);\r\n                })   \r\n      } catch (error) {\r\n        console.log(error);\r\n      }   \r\n\r\n    }, [generacion])\r\n\r\n    // OBTIENE TODOS LOS TIPOS DE POKÉMON\r\n    useEffect( () => {\r\n        try {\r\n          fetch(TYPE_API)\r\n                  .then(res => res.json())\r\n                  .then(data => {\r\n                    let results = data.results;\r\n                    setTypeGeneral(results);\r\n                  })\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n        return () => {\r\n  \r\n        }\r\n      }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n          <div className=\"container\">\r\n            <div className=\"card w-100\">\r\n                  <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Pókemon App</h5>\r\n                      <p className=\"card-text\">En esta sección se filtran los pokémon por generación y tipo</p>\r\n                    <div>\r\n                      <form>\r\n                        <div className=\"form-row justify-content-between\">\r\n                            <div className=\"form-group col-md-2\">\r\n                                <label htmlFor=\"inputState\">Generación</label>\r\n                                <select onChange={changeHandleGeneracion} id=\"inputState\" className=\"form-control\">\r\n                                    {generacionList.map( (gene) => {  \r\n                                            let nameCapitalize = gene.main_region.name.charAt(0).toUpperCase() + gene.main_region.name.slice(1)\r\n                                            return (            \r\n                                                <option value={gene.id} key={gene.id}>\r\n                                                    {nameCapitalize}\r\n                                                </option>        \r\n                                            )\r\n                                        })}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group col-md-2\">\r\n                                <label htmlFor=\"inputState\">Tipo</label>\r\n                                <select onChange={changeHandleType} id=\"inputState\" className=\"form-control\">\r\n                                    <option value=\"\" defaultValue>Todos</option>\r\n                                    {typeGeneral.map( (type) => {  \r\n                                            let nameCapitalize = type.name.charAt(0).toUpperCase() + type.name.slice(1)\r\n                                            return (            \r\n                                                <option value={type.name} key={type.name}>\r\n                                                    {nameCapitalize}\r\n                                                </option>        \r\n                                            )\r\n                                        })}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                      </form>\r\n                    </div>   \r\n                  </div>\r\n            </div>\r\n          </div>\r\n            {\r\n\r\n          loader === true ? (\r\n              <Loader/>\r\n\r\n            ) : (\r\n              <>\r\n                <>\r\n                  {\r\n                    pokemonFilter.length !== 0  ? (\r\n                        <div className = \"pokemon-container\">\r\n                            {\r\n                            pokemonFilter.length > 0 && pokemonFilter.map(pokemon => {\r\n                                if (pokemon === undefined) {\r\n                                    return null\r\n                                }\r\n                                return (\r\n                                <PokemonCard key={pokemon.id} pokemon = {pokemon} />)\r\n                            })\r\n                            }\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"container\">\r\n                            <div className=\"card w-100\">\r\n                                <div className=\"card-body\">\r\n                                    <h4 className=\"card-title\">¡¡Lo Sentimos!!</h4>\r\n                                    <p className=\"card-text\">No existe ningún pokémon que coincida con su filtro de búsqueda. \r\n                                    </p>  \r\n                                </div>\r\n                            </div>\r\n                        </div> \r\n                  )}\r\n                </>\r\n              </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NoSearchPokemon = ({pokemonName}) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"card w-100\">\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title\">¡¡Lo Sentimos!!</h4>\r\n                  <p className=\"card-text\">No existe ningún pokémon con el nombre o id: {pokemonName}, porfavor realice otra búsqueda si lo desea.\r\n                        Muchas gracias\r\n                  </p>  \r\n                </div>\r\n            </div>\r\n        </div> \r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { PokemonCard } from '../pokemonCard/PokemonCard';\r\nimport { Link } from 'react-router-dom'\r\nimport { Loader } from '../ui/Loader';\r\nimport { NoSearchPokemon } from '../ui/NoSearchPokemon';\r\nimport { SEARCH_API } from '../../config/config';\r\n\r\nexport const SearchPokemonScreen = () => {\r\n    \r\n    const [loader, setLoader] = useState(true);\r\n    \r\n    const params = useParams();\r\n\r\n    const [pokemonSearch, setPokemonSearch] = useState([]);\r\n\r\n\r\n    useEffect( () => {\r\n        setLoader(true)\r\n        try {\r\n            fetch(SEARCH_API+(params.pokemonName))\r\n                .then(res => {\r\n                  if(res.ok) {\r\n                    return res.json();\r\n                  } else {\r\n                    throw new Error ('Pokemon no existe')\r\n                  }\r\n                }).then(data => {\r\n                      const pokemon = [];\r\n                      pokemon.push(data)\r\n                      setPokemonSearch(pokemon)\r\n                      setLoader(false) \r\n                }).catch((error) => {\r\n                  console.log(error)\r\n                  setPokemonSearch([]);\r\n                  setLoader(false) \r\n                }) \r\n      \r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n    }, [params]);\r\n\r\n    return (   \r\n\r\n      <>\r\n\r\n        {\r\n          loader ? (\r\n\r\n            <Loader></Loader>\r\n\r\n          ) : (\r\n              <>\r\n                <div>\r\n                  <div className=\"pagination search\">\r\n                        <Link to=\"/all-pokemons\">\r\n                          <button>Ver Todos</button>\r\n                        </Link>\r\n                  </div>\r\n                </div>\r\n              \r\n                <>\r\n                  {\r\n                    pokemonSearch.length === 0? (\r\n                        <NoSearchPokemon pokemonName = {params.pokemonName} />\r\n                        ) : (\r\n                        <div className = \"pokemon-container\">\r\n                          {\r\n                            pokemonSearch.length > 0 && pokemonSearch.map(pokemon => (\r\n                              <PokemonCard key={pokemon.id} pokemon={pokemon} />\r\n                            ))\r\n                          }\r\n                        </div>\r\n                        )\r\n                  }\r\n                </>\r\n              </>\r\n          )\r\n        }\r\n      </>\r\n    )\r\n}\r\n               ","import React, {useState}  from 'react'\r\nimport { Link, NavLink, useHistory } from 'react-router-dom'\r\n\r\nexport const Navbar = () => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const history = useHistory();\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        const busqueda = e.target.value;\r\n\r\n        setInputValue((busqueda).toLowerCase());\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if(inputValue.trim().length > 0 ) {\r\n            history.push(`/search/${inputValue}`);\r\n            setInputValue('')\r\n            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-navbar\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">\r\n                        Houm Test\r\n                    </Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n            \r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <NavLink activeClassName=\"active\" className=\"nav-item nav-link\" exact to=\"/all-pokemons\">\r\n                            All Pokémon\r\n                        </NavLink>\r\n                        <NavLink activeClassName=\"active\" className=\"nav-item nav-link\" exact to=\"/generacion-pokemon\">\r\n                            Generaciones Pokémon\r\n                        </NavLink>\r\n                    </ul>\r\n                    <form className=\"form-inline my-2 my-lg-0\" onSubmit={handleSubmit}>\r\n                        <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Buscar por nombre o id\" aria-label=\"Search\" value={inputValue} onChange = { handleInputChange } />\r\n                        <button className=\"btn btn-primary btn-outline-light my-2 my-sm-0\" type=\"submit\">Buscar</button>\r\n                    </form>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport { AllPokemon } from '../components/allPokemons/AllPokemon';\r\nimport { PokemonGeneraciones } from '../components/generaciones/PokemonGeneraciones';\r\nimport { SearchPokemonScreen } from '../components/searchPokemon/SearchPokemonScreen';\r\nimport { Navbar } from '../components/ui/Navbar';\r\n\r\nexport const AppRouter = () => {\r\n    return (\r\n        <Router>\r\n      <div>\r\n        <Navbar/>\r\n        <Switch>\r\n\r\n            <Route exact path=\"/all-pokemons\" component={AllPokemon} />\r\n\r\n            <Route exact path=\"/search/:pokemonName\" component={SearchPokemonScreen} />\r\n\r\n            <Route exact path=\"/generacion-pokemon\" component={PokemonGeneraciones} />\r\n\r\n            <Redirect to=\"/all-pokemons\"/>\r\n\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Footer } from './components/ui/Footer'\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\nexport const PokemonApp = () => {\r\n    return (\r\n        <>\r\n            <AppRouter/>\r\n            <footer>\r\n                <Footer/>\r\n            </footer>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { PokemonApp } from './PokemonApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PokemonApp />,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}